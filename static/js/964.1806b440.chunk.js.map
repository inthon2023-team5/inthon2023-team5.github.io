{"version":3,"file":"static/js/964.1806b440.chunk.js","mappings":"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","sources":["api/auth.ts","components/Footer/index.tsx","content/auth/Login/index.tsx","content/auth/Register/index.tsx","../node_modules/@mui/icons-material/Done.js"],"sourcesContent":["import { LoginUser, RegisterUser } from 'src/models/user'\r\nimport ApiManager from '.'\r\n\r\nexport const postLogin = async (loginInfo: LoginUser) => {\r\n  const response = await ApiManager.post('/auth/login', loginInfo)\r\n  return response.data\r\n}\r\n\r\nexport const postRegister = async (registerInfo: RegisterUser) => {\r\n  const response = await ApiManager.post('/auth/signup', registerInfo)\r\n  return response.data\r\n}\r\n\r\nexport const postNicknameTest = async (nickname: string) => {\r\n  const response = await ApiManager.post('/auth/checkNickname', { nickname })\r\n  return response.data\r\n}\r\n","import { Box, Container, Link, Typography, styled } from '@mui/material'\n\nconst FooterWrapper = styled(Container)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(4)};\n`\n)\n\nfunction Footer() {\n  return (\n    <FooterWrapper className=\"footer-wrapper\">\n      <Box\n        pb={4}\n        display={{ xs: 'block', md: 'flex' }}\n        alignItems=\"center\"\n        textAlign={{ xs: 'center', md: 'left' }}\n        justifyContent=\"space-between\"\n      >\n        <Box>\n          <Typography variant=\"subtitle1\">&copy; 2023 - inThon 2023 Team 5</Typography>\n        </Box>\n      </Box>\n    </FooterWrapper>\n  )\n}\n\nexport default Footer\n","import { Helmet } from 'react-helmet-async'\r\nimport { useState } from 'react'\r\n\r\nimport { Container, Card, TextField, Link, styled } from '@mui/material'\r\nimport Footer from 'src/components/Footer'\r\n\r\nimport Button from '@mui/material/Button'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\nimport { postLogin } from 'src/api/auth'\r\nimport { LoginUser } from 'src/models/user'\r\nimport { useSnackbar } from 'notistack'\r\nimport { useSignIn } from 'react-auth-kit'\r\nimport { useNavigate } from 'react-router'\r\n\r\nconst LoginScreen = () => {\r\n  const [loginInfo, setLoginInfo] = useState<LoginUser>({\r\n    univId: '',\r\n    password: ''\r\n  })\r\n\r\n  const signIn = useSignIn()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const navigate = useNavigate()\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setLoginInfo({\r\n      ...loginInfo,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    if (loginInfo.univId.length === 0 || loginInfo.password.length === 0) {\r\n      enqueueSnackbar('학번과 비밀번호를 입력해주세요.', { variant: 'warning' })\r\n      return\r\n    }\r\n    try {\r\n      const res = await postLogin(loginInfo)\r\n      const authData = {\r\n        token: res.token,\r\n        tokenType: 'Bearer',\r\n        authState: {\r\n          id: res.userInfo.id,\r\n          email: res.userInfo.email,\r\n          grade: res.userInfo.grade,\r\n          name: res.userInfo.name,\r\n          nickname: res.userInfo.nickname,\r\n          point: res.userInfo.point,\r\n          rank: res.userInfo.rank,\r\n          univId: res.userInfo.univId\r\n        },\r\n        expiresIn: 60 * 60 * 24 * 1000\r\n      }\r\n      signIn(authData)\r\n      enqueueSnackbar('안녕하세요, 사용자님!', { variant: 'success' })\r\n      navigate('/')\r\n    } catch (e) {\r\n      enqueueSnackbar('로그인에 실패했어요. 나중에 다시 시도해주세요 :(', { variant: 'error' })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <RoundWrapper>\r\n        <Helmet>\r\n          <title>로그인</title>\r\n        </Helmet>\r\n        <Container maxWidth=\"lg\">\r\n          <Box display=\"flex\" justifyContent=\"center\" py={2} alignItems=\"center\">\r\n            {/* <Logo /> */}\r\n          </Box>\r\n          <Card sx={{ p: 10, borderRadius: 0, borderTopRightRadius: 80, borderTopLeftRadius: 80 }}>\r\n            <Container\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                marginY: 20,\r\n                maxWidth: 'sm'\r\n              }}\r\n            >\r\n              <Box\r\n                component=\"form\"\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  '& .MuiTextField-root': { margin: 1 }\r\n                }}\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <Typography variant=\"h3\" component=\"div\" gutterBottom>\r\n                  로그인\r\n                </Typography>\r\n                <TextField\r\n                  id=\"univId\"\r\n                  name=\"univId\"\r\n                  type=\"text\"\r\n                  label=\"(학교) 학번\"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  label=\"비밀번호\"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                />\r\n                <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 1 }}>\r\n                  로그인\r\n                </Button>\r\n                <Link href=\"/auth/register\" sx={{ mt: 1 }}>\r\n                  아직 계정이 없으신가요?\r\n                </Link>\r\n              </Box>\r\n            </Container>\r\n          </Card>\r\n        </Container>\r\n        <Footer />\r\n      </RoundWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nexport const RoundWrapper = styled(Box)(\r\n  () => `\r\n    overflow: auto;\r\n    flex: 1;\r\n    overflow-x: hidden;\r\n    align-items: center;\r\n`\r\n)\r\n","import { Helmet } from 'react-helmet-async'\r\nimport { useState } from 'react'\r\n\r\nimport { Container, Card, TextField, Link } from '@mui/material'\r\nimport Footer from 'src/components/Footer'\r\nimport DoneIcon from '@mui/icons-material/Done'\r\nimport Button from '@mui/material/Button'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Grade, RegisterUser } from 'src/models/user'\r\nimport { postNicknameTest, postRegister } from 'src/api/auth'\r\nimport { enqueueSnackbar } from 'notistack'\r\nimport { useNavigate } from 'react-router'\r\nimport { RoundWrapper } from '../Login'\r\n\r\nconst RegisterScreen = () => {\r\n  const [registerInfo, setRegisterInfo] = useState<RegisterUser>({\r\n    univId: '',\r\n    name: '',\r\n    nickname: '',\r\n    rank: 0,\r\n    email: '',\r\n    grade: 'JUNIOR',\r\n    password: '',\r\n    confirmPassword: ''\r\n  })\r\n\r\n  const [isNicknameUnique, setIsNicknameUnique] = useState<boolean>(false)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const handleCheckNickname = async () => {\r\n    if (!registerInfo.nickname.length) {\r\n      enqueueSnackbar('닉네임을 입력해주세요', { variant: 'warning' })\r\n      return\r\n    }\r\n    try {\r\n      const isUnique = await postNicknameTest(registerInfo.nickname)\r\n      if (isUnique) {\r\n        setIsNicknameUnique(true)\r\n        enqueueSnackbar('사용가능한 닉네임이에요!', { variant: 'success' })\r\n      } else {\r\n        enqueueSnackbar('이미 존재하는 닉네임입니다.', { variant: 'error' })\r\n      }\r\n    } catch {\r\n      enqueueSnackbar('닉네임 중복확인에 실패했습니다.', { variant: 'error' })\r\n    }\r\n  }\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setRegisterInfo({ ...registerInfo, [name]: value })\r\n    if (name === 'nickname') {\r\n      setIsNicknameUnique(false)\r\n    }\r\n  }\r\n\r\n  const handleChangeButton: React.MouseEventHandler<HTMLButtonElement> = e => {\r\n    setRegisterInfo({\r\n      ...registerInfo,\r\n      grade: e.currentTarget.value as Grade\r\n    })\r\n  }\r\n\r\n  const validatePassword = (password: string) => {\r\n    if (password.length < 8) {\r\n      return '비밀번호는 8자 이상이어야 합니다.'\r\n    } else if (password.search(/[0-9]/g) < 0) {\r\n      return '비밀번호는 숫자를 포함해야 합니다.'\r\n    } else if (password.search(/[a-zA-Z]/g) < 0) {\r\n      return '비밀번호는 영문자를 포함해야 합니다.'\r\n    }\r\n    return ''\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    if (registerInfo.univId.length < 6) {\r\n      enqueueSnackbar('학번/교번을 정확히 입력해주세요', { variant: 'warning' })\r\n      return\r\n    }\r\n    if (!registerInfo.name.length || registerInfo.name.length < 2) {\r\n      enqueueSnackbar('이름을 2자 이상 입력해주세요', { variant: 'warning' })\r\n      return\r\n    }\r\n    if (!registerInfo.nickname.length) {\r\n      enqueueSnackbar('닉네임을 입력해주세요', { variant: 'warning' })\r\n      return\r\n    }\r\n    if (!isNicknameUnique) {\r\n      enqueueSnackbar('닉네임 중복확인을 해주세요', { variant: 'warning' })\r\n      return\r\n    }\r\n    if (!registerInfo.email.length) {\r\n      enqueueSnackbar('이메일을 입력해주세요', { variant: 'warning' })\r\n      return\r\n    }\r\n    if (!registerInfo.password.length) {\r\n      enqueueSnackbar('비밀번호를 입력해주세요', { variant: 'warning' })\r\n      return\r\n    }\r\n    if (validatePassword(registerInfo.password).length) {\r\n      enqueueSnackbar(validatePassword(registerInfo.password), { variant: 'warning' })\r\n      return\r\n    }\r\n    if (registerInfo.password !== registerInfo.confirmPassword) {\r\n      enqueueSnackbar('비밀번호가 일치하지 않습니다.', { variant: 'warning' })\r\n      return\r\n    }\r\n\r\n    try {\r\n      const requestData = { ...registerInfo }\r\n      delete requestData.confirmPassword\r\n      await postRegister(requestData)\r\n      enqueueSnackbar('회원가입이 완료되었습니다. 로그인 후 사용해주세요!', { variant: 'success' })\r\n      navigate('/auth/login')\r\n    } catch (err) {\r\n      if (err.response.status === 409) {\r\n        enqueueSnackbar('이미 존재하는 학번입니다.', { variant: 'error' })\r\n        return\r\n      }\r\n      enqueueSnackbar('회원가입에 실패하였습니다. 다시시도해 주세요', { variant: 'error' })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <RoundWrapper>\r\n        <Helmet>\r\n          <title>회원가입</title>\r\n        </Helmet>\r\n        <Container maxWidth=\"lg\">\r\n          <Box display=\"flex\" justifyContent=\"center\" py={2} alignItems=\"center\">\r\n            {/* <Logo /> */}\r\n          </Box>\r\n          <Card sx={{ p: 10, borderRadius: 0, borderTopRightRadius: 80, borderTopLeftRadius: 80 }}>\r\n            <Typography variant=\"h3\" component=\"div\" gutterBottom>\r\n              회원가입\r\n            </Typography>\r\n            <Container\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                maxWidth: 'sm'\r\n              }}\r\n            >\r\n              <Box\r\n                component=\"form\"\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  '& .MuiTextField-root': { margin: 1 }\r\n                }}\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <Box>\r\n                  <Typography variant=\"h6\" component=\"div\" gutterBottom>\r\n                    회원 유형\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" component=\"div\" gutterBottom>\r\n                    자유롭게 선택하실 수 있으나, 학번 앞자리는 공개됩니다. (ex: 20학번)\r\n                  </Typography>\r\n                </Box>\r\n                <Box display={'flex'} width={'100%'} justifyContent={'space-between'} p={1}>\r\n                  <Button\r\n                    value={'PROFESSOR'}\r\n                    name=\"PROFESSOR\"\r\n                    onClick={handleChangeButton}\r\n                    variant={registerInfo.grade === 'PROFESSOR' ? 'contained' : 'outlined'}\r\n                    sx={{ mr: 1 }}\r\n                    fullWidth\r\n                  >\r\n                    교수진\r\n                  </Button>\r\n                  <Button\r\n                    value={'SENIOR'}\r\n                    name=\"SENIOR\"\r\n                    onClick={handleChangeButton}\r\n                    variant={registerInfo.grade === 'SENIOR' ? 'contained' : 'outlined'}\r\n                    sx={{ mr: 1 }}\r\n                    fullWidth\r\n                  >\r\n                    선배\r\n                  </Button>\r\n                  <Button\r\n                    value={'JUNIOR'}\r\n                    name=\"JUNIOR\"\r\n                    onClick={handleChangeButton}\r\n                    variant={registerInfo.grade === 'JUNIOR' ? 'contained' : 'outlined'}\r\n                    fullWidth\r\n                  >\r\n                    후배\r\n                  </Button>\r\n                </Box>\r\n                <Box sx={{ display: 'flex', width: '100%' }}>\r\n                  <TextField\r\n                    id=\"univId\"\r\n                    name=\"univId\"\r\n                    type=\"text\"\r\n                    label={`${registerInfo.grade === 'PROFESSOR' ? '교번' : '학번'}을 입력해주세요`}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <Box sx={{ display: 'flex', width: '100%' }}>\r\n                  <TextField\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    label={'2자 이상의 이름을 입력해주세요'}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <Box sx={{ display: 'flex', width: '100%', justifyContent: 'space-between' }}>\r\n                  <TextField\r\n                    id=\"nickname\"\r\n                    name=\"nickname\"\r\n                    type=\"text\"\r\n                    label={'사용하실 닉네임을 입력해주세요'}\r\n                    onChange={handleChange}\r\n                    sx={{ width: '70%' }}\r\n                  />\r\n                  {isNicknameUnique ? (\r\n                    <Button sx={{ mr: 1 }} disabled>\r\n                      <DoneIcon />\r\n                    </Button>\r\n                  ) : (\r\n                    <Button sx={{ mr: 1 }} onClick={handleCheckNickname}>\r\n                      중복확인\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n                <Box sx={{ display: 'flex', width: '100%' }}>\r\n                  <TextField\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    label={'학교 이메일을 입력해주세요 (..@korea.ac.kr)'}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <Box sx={{ display: 'flex', width: '100%' }}>\r\n                  <TextField\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    label=\"비밀번호 (6자 이상의 숫자, 영문 조합)\"\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <Box sx={{ display: 'flex', width: '100%' }}>\r\n                  <TextField\r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    label=\"비밀번호 확인\"\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 1 }} disabled={!isNicknameUnique}>\r\n                  회원가입\r\n                </Button>\r\n                <Link href=\"/auth/login\" sx={{ mt: 1 }}>\r\n                  이미 계정이 있어요.\r\n                </Link>\r\n              </Box>\r\n            </Container>\r\n          </Card>\r\n        </Container>\r\n        <Footer />\r\n      </RoundWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;"],"names":["postLogin","loginInfo","ApiManager","response","data","postRegister","registerInfo","postNicknameTest","nickname","FooterWrapper","styled","Container","theme","spacing","className","pb","display","xs","md","alignItems","textAlign","justifyContent","variant","useState","univId","password","setLoginInfo","signIn","useSignIn","enqueueSnackbar","useSnackbar","navigate","useNavigate","handleChange","e","target","name","value","handleSubmit","preventDefault","length","res","authData","token","tokenType","authState","id","userInfo","email","grade","point","rank","expiresIn","RoundWrapper","maxWidth","py","sx","p","borderRadius","borderTopRightRadius","borderTopLeftRadius","marginY","component","flexDirection","margin","onSubmit","gutterBottom","type","label","onChange","fullWidth","mt","href","Box","confirmPassword","setRegisterInfo","isNicknameUnique","setIsNicknameUnique","handleCheckNickname","handleChangeButton","currentTarget","validatePassword","search","requestData","status","width","onClick","mr","disabled","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}