{"version":3,"file":"static/js/230.5f55bf8c.chunk.js","mappings":"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","sources":["components/Footer/index.tsx","content/user/profile/Rank.tsx","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","content/user/profile/ProfileBox.tsx","../node_modules/@mui/icons-material/esm/ExpandMore.js","content/user/profile/UserQuestionList.tsx","content/user/profile/index.tsx"],"sourcesContent":["import { Box, Container, Link, Typography, styled } from '@mui/material'\n\nconst FooterWrapper = styled(Container)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(4)};\n`\n)\n\nfunction Footer() {\n  return (\n    <FooterWrapper className=\"footer-wrapper\">\n      <Box\n        pb={4}\n        display={{ xs: 'block', md: 'flex' }}\n        alignItems=\"center\"\n        textAlign={{ xs: 'center', md: 'left' }}\n        justifyContent=\"space-between\"\n      >\n        <Box>\n          <Typography variant=\"subtitle1\">&copy; 2023 - inThon 2023 Team 5</Typography>\n        </Box>\n      </Box>\n    </FooterWrapper>\n  )\n}\n\nexport default Footer\n","import MilitaryTechIcon from '@mui/icons-material/MilitaryTech'\r\nimport { BadgeSet } from 'src/models/user'\r\n\r\ninterface RankBadgeProps {\r\n  rank: number\r\n}\r\n\r\nconst badgeColor = {\r\n  BRONZE: '#cd7f32',\r\n  SILVER: '#c0c0c0',\r\n  GOLD: '#ffd700',\r\n  PLATINUM: '#00ced1',\r\n  DIAMOND: '#b9f2ff'\r\n}\r\n\r\nconst RankBadge = ({ rank }: RankBadgeProps) => {\r\n  const badgeType = BadgeSet[rank].split(' ')[0]\r\n  return <MilitaryTechIcon sx={{ fontSize: 38, color: badgeColor[badgeType] }} />\r\n}\r\n\r\nexport default RankBadge\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { Avatar, Box, Card, CardHeader, Chip, Divider, Typography } from '@mui/material'\nimport { useAuthUser } from 'react-auth-kit'\nimport { BadgeSet, GradeSet } from 'src/models/user'\nimport stringToHexColor from 'src/utils/stringToColor'\nimport Rank from './Rank'\n\nconst ProfileBox = () => {\n  const authUser = useAuthUser()\n  const user = authUser()\n  return (\n    <Card>\n      <CardHeader title=\"내 프로필\" />\n      <Divider />\n      <Box p={2} display={'flex'}>\n        <Box display={'flex'} flexDirection={'column'} justifyContent={'center'}>\n          <Avatar sx={{ bgcolor: stringToHexColor(user.nickname) }} sizes=\"large\">\n            {user.nickname[0]}\n          </Avatar>\n        </Box>\n        <Box ml={4}>\n          <Box display={'flex'} alignItems={'center'}>\n            <Typography variant=\"h4\">{user.nickname}</Typography>\n            <Chip label={GradeSet[user.grade]} size=\"small\" color=\"primary\" sx={{ ml: 1 }} />\n          </Box>\n          <Box display={'flex'} alignItems={'center'} mt={1}>\n            <Typography variant=\"body2\">\n              {user.univId} / {user.name}\n            </Typography>\n          </Box>\n        </Box>\n        <Box ml={'auto'}>\n          <Box display={'flex'} justifyContent={'center'} alignItems={'center'}>\n            <Rank rank={user.rank} />\n            <Typography variant=\"h5\">{BadgeSet[user.rank]}</Typography>\n          </Box>\n          <Box display={'flex'} alignItems={'center'}>\n            <Typography>보유 포인트: &nbsp;</Typography>\n            <Typography variant=\"h4\">{user.point}</Typography>\n          </Box>\n        </Box>\n      </Box>\n    </Card>\n  )\n}\n\nexport default ProfileBox\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import { ExpandMore } from '@mui/icons-material'\r\nimport { Accordion, AccordionDetails, AccordionSummary, Card, List, Typography } from '@mui/material'\r\nimport QuestionButton from 'src/components/QuestionButton'\r\nimport { QuestionHistory } from 'src/models/question'\r\n\r\ninterface UserQuestionListProps {\r\n  questions: QuestionHistory[]\r\n  title: string\r\n}\r\n\r\nconst UserQuestionList = ({ questions, title }: UserQuestionListProps) => {\r\n  return (\r\n    <Card>\r\n      <Accordion sx={{ backgroundColor: 'transparent' }}>\r\n        <AccordionSummary expandIcon={<ExpandMore />}>\r\n          <Typography variant=\"h4\" ml={2}>\r\n            {title}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ margin: 0 }}>\r\n          <List component=\"div\">\r\n            {questions.map((question, idx) => (\r\n              <QuestionButton q={question} key={idx} />\r\n            ))}\r\n          </List>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UserQuestionList\r\n","import { Helmet } from 'react-helmet-async'\nimport Footer from 'src/components/Footer'\n\nimport { Grid, Container } from '@mui/material'\n\nimport ProfileBox from './ProfileBox'\nimport { useAuthUser, useAuthHeader } from 'react-auth-kit'\nimport { useNavigate } from 'react-router'\nimport UserQuestionList from './UserQuestionList'\nimport { getUserQuestionHistory } from 'src/api/user'\nimport { enqueueSnackbar } from 'notistack'\nimport { useEffect, useState } from 'react'\nimport { QuestionHistory } from 'src/models/question'\n\nconst UserProfile = () => {\n  const token = useAuthHeader()()\n  const authUser = useAuthUser()\n  const user = authUser()\n  const navigate = useNavigate()\n\n  if (!user) navigate('auth/login')\n\n  const [questionHistoryAnswer, setQuestionHistoryAnswer] = useState<QuestionHistory[]>([])\n  const [questionHistoryQuestion, setQuestionHistoryQuestion] = useState<QuestionHistory[]>([])\n\n  const fetchQuestionHistory = async () => {\n    try {\n      const res = await getUserQuestionHistory(token)\n\n      setQuestionHistoryAnswer(res.answers.sort((a, b) => (a.createdAt > b.createdAt ? -1 : 1)))\n      setQuestionHistoryQuestion(res.questions.sort((a, b) => (a.createdAt > b.createdAt ? -1 : 1)))\n    } catch (err) {\n      enqueueSnackbar('질문 내역을 불러오는데 실패했습니다.', { variant: 'error' })\n    }\n  }\n\n  useEffect(() => {\n    fetchQuestionHistory()\n  }, [])\n\n  return (\n    <>\n      <Helmet>\n        <title>내 프로필</title>\n      </Helmet>\n      <Container sx={{ mt: 3 }} maxWidth=\"lg\">\n        <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={3}>\n          <Grid item xs={12}>\n            <ProfileBox />\n          </Grid>\n          <Grid item xs={12}>\n            <UserQuestionList questions={questionHistoryQuestion} title={'내가 질문한 내역'} />\n          </Grid>\n          <Grid item xs={12}>\n            <UserQuestionList questions={questionHistoryAnswer} title={'내가 답변한 내역'} />\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  )\n}\n\nexport default UserProfile\n"],"names":["FooterWrapper","styled","Container","theme","spacing","className","pb","display","xs","md","alignItems","textAlign","justifyContent","variant","badgeColor","BRONZE","SILVER","GOLD","PLATINUM","DIAMOND","rank","badgeType","BadgeSet","split","sx","fontSize","color","getCardHeaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardHeaderRoot","name","overridesResolver","props","styles","_extends","cardHeaderClasses","title","subheader","root","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","React","inProps","ref","useThemeProps","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","type","Typography","_jsx","children","_jsxs","clsx","as","user","useAuthUser","authUser","Card","Divider","Box","p","flexDirection","Avatar","bgcolor","stringToHexColor","nickname","sizes","ml","Chip","label","GradeSet","grade","size","mt","univId","Rank","point","createSvgIcon","d","questions","Accordion","backgroundColor","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","margin","List","map","question","idx","QuestionButton","q","token","useAuthHeader","navigate","useNavigate","useState","questionHistoryAnswer","setQuestionHistoryAnswer","questionHistoryQuestion","setQuestionHistoryQuestion","fetchQuestionHistory","getUserQuestionHistory","res","answers","sort","a","b","createdAt","enqueueSnackbar","useEffect","maxWidth","Grid","container","direction","item","Footer"],"sourceRoot":""}